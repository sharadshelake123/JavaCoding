server.port = 8080

#logging.level.web=TRACE
#logging.level.org.springframework.web=TRACE
#logging.level.root=OFF

spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
logging.level.org.hibernate=ERROR
spring.jpa.properties.hibernate.show_sql=false



spring.datasource.url=jdbc:postgresql://localhost:5432/fortune4
spring.datasource.username=postgres
spring.datasource.password=System
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL81Dialect


#Please use your gmail id
#The Gmail Id used to login into your Gmail account can be provided as the username. For password generation, 2-step verification needs to be enabled for your account
#spring.mail.username=your gmail id
#Following that, AppPassword needs to be created using the following path:
#Login to Gmail 
#    -> Manage your Google Account 
#        -> Security 
#            -> App Passwords 
#                -> Provide your login password 
#                    -> Select app with a custom name 
 #                       -> Click on Generate
#spring.mail.password=Your Generated password

spring.mail.username=shrdshlk45@gmail.com
spring.mail.password=dqxzbcwwknguawos

jwt.secret=javainusefortest
jwt.get.token.uri=/authenticate






